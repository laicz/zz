<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd 
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd 
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd"
		default-lazy-init="true">

	<description>Spring MVC Configuration</description>

	<!-- 引入配置文件 -->
	<!-- <context:property-placeholder ignore-unresolvable="true" location="chi.properties"/> -->

	<!-- 使用annotation自动注册Bean，只扫描@Controller -->
	<context:component-scan base-package="com.zhou.zz">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- 启动AspectJ支持 -->
<!-- 	<aop:aspectj-autoproxy proxy-target-class="true" /> -->

	<!-- 对静态资源文件的访问， 将无法mapping到Controller的path交给default servlet handler处理 -->
	<mvc:default-servlet-handler />
	<!-- 设置配置方案 -->
	<mvc:annotation-driven>
		<!-- 设置不使用默认的消息转换器 -->
		<mvc:message-converters register-defaults="false">
			<!-- 配置spring的转换器 -->
			<bean class="org.springframework.http.converter.StringHttpMessageConverter" />
			<bean
				class="org.springframework.http.converter.xml.XmlAwareFormHttpMessageConverter" />
			<bean
				class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
			<bean
				class="org.springframework.http.converter.BufferedImageHttpMessageConverter" />
			<!-- 配置fastjson中实现HttpMessageConverter接口的转换器 -->
			<bean id="fastJsonHttpMessageConverter"
				class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
				<!-- 加入支持的媒体类型 -->
				<property name="supportedMediaTypes">
					<list>
						<!-- 这里的顺序不能反，一定要先写text/html，不然IE会出现下载提示 -->
						<value>text/html;charset=UTF-8</value>
						<value>application/json;charset=UTF-8</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	<!-- 使用默认的servlet来响应静态文件 -->
<!-- 	<mvhi:default-servlet-handler /> -->

	<!-- 视图解析器 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF"></property>
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- 支持文件上传 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 限制文件上传的大小 10M -->
		<property name="maxUploadSize">
			<value>10485760</value>
		</property>
		<!-- 请求的编码格式，必须和jsp的pageEncoding属性一致， -->
		<property name="defaultEncoding">
			<value>UTF-8</value>
		</property>
	</bean>

	<!-- 自定义拦截器 -->
	<mvc:interceptors>
		<!-- 登录拦截器 -->
 		<mvc:interceptor> 
 			<!-- 拦截所有的请求 --> 
 			<mvc:mapping path="/*" />
 			<!-- 自定义的拦截器 --> 
 			<bean class="com.zhou.zz.sys.interceptor.AuthorizationInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>

</beans>